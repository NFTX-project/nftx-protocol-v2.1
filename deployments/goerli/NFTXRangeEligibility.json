{
  "address": "0x8420a858809e059F1a6bA5E5edF3ad727b21B792",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rangeStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rangeEnd",
          "type": "uint256"
        }
      ],
      "name": "NFTXEligibilityInit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rangeStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rangeEnd",
          "type": "uint256"
        }
      ],
      "name": "RangeSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rangeStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rangeEnd",
          "type": "uint256"
        }
      ],
      "name": "__NFTXEligibility_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_configData",
          "type": "bytes"
        }
      ],
      "name": "__NFTXEligibility_init_bytes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "afterMintHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "afterRedeemHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "beforeMintHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "beforeRedeemHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "checkAllEligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "checkAllIneligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "checkEligible",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "checkIsEligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rangeEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rangeStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xc1cf522f3cbd36cbf3f17c86a58587dbc555b1b606d15e7c61ebe8e0b5bd0a26",
  "receipt": {
    "to": null,
    "from": "0xDEA9196Dcdd2173D6E369c2AcC0faCc83fD9346a",
    "contractAddress": "0x8420a858809e059F1a6bA5E5edF3ad727b21B792",
    "transactionIndex": 87,
    "gasUsed": "537538",
    "logsBloom": "0x
    "blockHash": "0x0bcf533c39f2f22dc3719a6047886071c997c82638dcd306df6b37a18fb24eef",
    "transactionHash": "0xc1cf522f3cbd36cbf3f17c86a58587dbc555b1b606d15e7c61ebe8e0b5bd0a26",
    "logs": [],
    "blockNumber": 8157589,
    "cumulativeGasUsed": "20446366",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a20dbdff6dc45f8d8bc4c474ea40c4ee",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rangeStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rangeEnd\",\"type\":\"uint256\"}],\"name\":\"NFTXEligibilityInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rangeStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rangeEnd\",\"type\":\"uint256\"}],\"name\":\"RangeSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rangeStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rangeEnd\",\"type\":\"uint256\"}],\"name\":\"__NFTXEligibility_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_configData\",\"type\":\"bytes\"}],\"name\":\"__NFTXEligibility_init_bytes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"afterMintHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"afterRedeemHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"beforeMintHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"beforeRedeemHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"checkAllEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"checkAllIneligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"checkEligible\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"checkIsEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rangeEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rangeStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/solidity/eligibility/NFTXRangeEligibility.sol\":\"NFTXRangeEligibility\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/solidity/eligibility/NFTXEligibility.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../proxy/Initializable.sol\\\";\\nimport \\\"../interface/INFTXEligibility.sol\\\";\\n\\n// This is a contract meant to be inherited and overriden to implement eligibility modules. \\nabstract contract NFTXEligibility is INFTXEligibility, Initializable {\\n  function name() public pure override virtual returns (string memory);\\n  function finalized() public view override virtual returns (bool);\\n  function targetAsset() public pure override virtual returns (address);\\n  \\n  function __NFTXEligibility_init_bytes(bytes memory initData) public override virtual;\\n\\n  function checkIsEligible(uint256 tokenId) external view override virtual returns (bool) {\\n      return _checkIfEligible(tokenId);\\n  }\\n\\n  function checkEligible(uint256[] calldata tokenIds) external override virtual view returns (bool[] memory) {\\n      uint256 length = tokenIds.length;\\n      bool[] memory eligibile = new bool[](length);\\n      for (uint256 i; i < length; i++) {\\n          eligibile[i] = _checkIfEligible(tokenIds[i]);\\n      }\\n      return eligibile;\\n  }\\n\\n  function checkAllEligible(uint256[] calldata tokenIds) external override virtual view returns (bool) {\\n      uint256 length = tokenIds.length;\\n      for (uint256 i; i < length; i++) {\\n          // If any are not eligible, end the loop and return false.\\n          if (!_checkIfEligible(tokenIds[i])) {\\n              return false;\\n          }\\n      }\\n      return true;\\n  }\\n\\n  // Checks if all provided NFTs are NOT eligible. This is needed for mint requesting where all NFTs \\n  // provided must be ineligible.\\n  function checkAllIneligible(uint256[] calldata tokenIds) external override virtual view returns (bool) {\\n      uint256 length = tokenIds.length;\\n      for (uint256 i; i < length; i++) {\\n          // If any are eligible, end the loop and return false.\\n          if (_checkIfEligible(tokenIds[i])) {\\n              return false;\\n          }\\n      }\\n      return true;\\n  }\\n\\n  function beforeMintHook(uint256[] calldata tokenIds) external override virtual {}\\n  function afterMintHook(uint256[] calldata tokenIds) external override virtual {}\\n  function beforeRedeemHook(uint256[] calldata tokenIds) external override virtual {}\\n  function afterRedeemHook(uint256[] calldata tokenIds) external override virtual {}\\n\\n  // Override this to implement your module!\\n  function _checkIfEligible(uint256 _tokenId) internal view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0x3997ba7e9f970b2c66dbf97ae374ff9cfc38d8be87a35911df4fa91ad8710360\",\"license\":\"MIT\"},\"contracts/solidity/eligibility/NFTXRangeEligibility.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./NFTXEligibility.sol\\\";\\n\\n// Maybe use guardian here?\\ncontract NFTXRangeEligibility is NFTXEligibility {\\n    function name() public pure override virtual returns (string memory) {\\n        return \\\"Range\\\";\\n    }\\n\\n    function finalized() public view override virtual returns (bool) {\\n        return true;\\n    }\\n\\n    function targetAsset() public pure override virtual returns (address) {\\n        return address(0);\\n    }\\n\\n    uint256 public rangeStart;\\n    uint256 public rangeEnd;\\n\\n    struct Config {\\n        uint256 rangeStart;\\n        uint256 rangeEnd;\\n    }\\n    event RangeSet(uint256 rangeStart, uint256 rangeEnd);\\n    event NFTXEligibilityInit(\\n        uint256 rangeStart,\\n        uint256 rangeEnd\\n    );\\n\\n    function __NFTXEligibility_init_bytes(bytes memory _configData)\\n        public\\n        override\\n        virtual\\n        initializer\\n    {\\n        (uint256 _rangeStart, uint256 _rangeEnd) = abi.decode(_configData, (uint256, uint256));\\n        __NFTXEligibility_init(_rangeStart, _rangeEnd);\\n    }\\n\\n    function __NFTXEligibility_init(\\n        uint256 _rangeStart,\\n        uint256 _rangeEnd\\n    ) public initializer {\\n        require(_rangeStart <= _rangeEnd, \\\"start > end\\\");\\n        rangeStart = _rangeStart;\\n        rangeEnd = _rangeEnd;\\n        emit RangeSet(_rangeStart, _rangeEnd);\\n        emit NFTXEligibilityInit(_rangeStart, _rangeEnd);\\n    }\\n\\n    function _checkIfEligible(uint256 _tokenId)\\n        internal\\n        view\\n        override\\n        virtual\\n        returns (bool)\\n    {\\n        return _tokenId >= rangeStart && _tokenId <= rangeEnd;\\n    }\\n}\\n\",\"keccak256\":\"0xa735b89b0db435d94304739a2a19a3569e3645a2a2c87b06e35a8872755fa51b\",\"license\":\"MIT\"},\"contracts/solidity/interface/INFTXEligibility.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface INFTXEligibility {\\n    // Read functions.\\n    function name() external pure returns (string memory);\\n\\n    function finalized() external view returns (bool);\\n\\n    function targetAsset() external pure returns (address);\\n\\n    function checkAllEligible(uint256[] calldata tokenIds)\\n        external\\n        view\\n        returns (bool);\\n\\n    function checkEligible(uint256[] calldata tokenIds)\\n        external\\n        view\\n        returns (bool[] memory);\\n\\n    function checkAllIneligible(uint256[] calldata tokenIds)\\n        external\\n        view\\n        returns (bool);\\n\\n    function checkIsEligible(uint256 tokenId) external view returns (bool);\\n\\n    // Write functions.\\n    function __NFTXEligibility_init_bytes(bytes calldata configData) external;\\n\\n    function beforeMintHook(uint256[] calldata tokenIds) external;\\n\\n    function afterMintHook(uint256[] calldata tokenIds) external;\\n\\n    function beforeRedeemHook(uint256[] calldata tokenIds) external;\\n\\n    function afterRedeemHook(uint256[] calldata tokenIds) external;\\n}\\n\",\"keccak256\":\"0xd932fdc4ea04b9d685f094b4405e64da8f3ab46cd701b22223f2a28d42973c70\",\"license\":\"MIT\"},\"contracts/solidity/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(\\n            _initializing || !_initialized,\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x04ad3c77a6a5006b66f1642cc3353b8009215d734eb80f069ed42a6c09460391\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c47d59511610097578063b3f05b9711610066578063b3f05b97146101ee578063bd8affde14610157578063ca373f28146101f5578063d2a096e81461020857600080fd5b80636c47d595146101575780636cd91260146101a25780637920c127146101c257806384ca9f85146101cb57600080fd5b80633d4403ac116100d35780633d4403ac146101695780634998b7f3146101785780635c99ee011461018b5780635e2f9b521461015757600080fd5b806306fdde03146100fa578063264b1b601461014257806336eb086214610157575b600080fd5b604080518082018252600581527f52616e6765000000000000000000000000000000000000000000000000000000602082015290516101399190610801565b60405180910390f35b610155610150366004610777565b61021b565b005b610155610165366004610645565b5050565b60405160008152602001610139565b6101556101863660046106b5565b6103b0565b61019460025481565b604051908152602001610139565b6101b56101b0366004610645565b610499565b60405161013991906107bb565b61019460015481565b6101de6101d9366004610645565b610578565b6040519015158152602001610139565b60016101de565b6101de610203366004610645565b6105d4565b6101de61021636600461075f565b610626565b600054610100900460ff1680610234575060005460ff16155b6102ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600054610100900460ff161580156102cd576000805461ffff19166101011790555b8183111561031d5760405162461bcd60e51b815260206004820152600b60248201527f7374617274203e20656e6400000000000000000000000000000000000000000060448201526064016102a2565b6001839055600282905560408051848152602081018490527f2aa006707091dbb6a3c123c2b234325bd71d72a53ba791b7227967655a550957910160405180910390a160408051848152602081018490527f89321eb999f10a080658dd5e8e1ad2ad210be9e3d965c97d0fff3380159664fd910160405180910390a180156103ab576000805461ff00191690555b505050565b600054610100900460ff16806103c9575060005460ff16155b61043b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016102a2565b600054610100900460ff1615801561045d576000805461ffff19166101011790555b600080838060200190518101906104749190610798565b91509150610482828261021b565b50508015610165576000805461ff00191690555050565b60608160008167ffffffffffffffff8111156104c557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104ee578160200160208202803683370190505b50905060005b8281101561056d5761052b86868381811061051f57634e487b7160e01b600052603260045260246000fd5b9050602002013561062d565b82828151811061054b57634e487b7160e01b600052603260045260246000fd5b911515602092830291909101909101528061056581610854565b9150506104f4565b509150505b92915050565b600081815b818110156105c9576105a885858381811061051f57634e487b7160e01b600052603260045260246000fd5b6105b757600092505050610572565b806105c181610854565b91505061057d565b506001949350505050565b600081815b818110156105c95761060485858381811061051f57634e487b7160e01b600052603260045260246000fd5b1561061457600092505050610572565b8061061e81610854565b9150506105d9565b6000610572825b60006001548210158015610572575050600254101590565b60008060208385031215610657578182fd5b823567ffffffffffffffff8082111561066e578384fd5b818501915085601f830112610681578384fd5b81358181111561068f578485fd5b8660208260051b85010111156106a3578485fd5b60209290920196919550909350505050565b6000602082840312156106c6578081fd5b813567ffffffffffffffff808211156106dd578283fd5b818401915084601f8301126106f0578283fd5b8135818111156107025761070261087b565b604051601f8201601f19908116603f0116810190838211818310171561072a5761072a61087b565b81604052828152876020848701011115610742578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215610770578081fd5b5035919050565b60008060408385031215610789578182fd5b50508035926020909101359150565b600080604083850312156107aa578182fd5b505080516020909101519092909150565b6020808252825182820181905260009190848201906040850190845b818110156107f55783511515835292840192918401916001016107d7565b50909695505050505050565b6000602080835283518082850152825b8181101561082d57858101830151858201604001528201610811565b8181111561083e5783604083870101525b50601f01601f1916929092016040019392505050565b600060001982141561087457634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fb2cf73ab3f0ae1e8111c26aedc88cf79ae788d940809f3ccca6a4c2f08a178664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c47d59511610097578063b3f05b9711610066578063b3f05b97146101ee578063bd8affde14610157578063ca373f28146101f5578063d2a096e81461020857600080fd5b80636c47d595146101575780636cd91260146101a25780637920c127146101c257806384ca9f85146101cb57600080fd5b80633d4403ac116100d35780633d4403ac146101695780634998b7f3146101785780635c99ee011461018b5780635e2f9b521461015757600080fd5b806306fdde03146100fa578063264b1b601461014257806336eb086214610157575b600080fd5b604080518082018252600581527f52616e6765000000000000000000000000000000000000000000000000000000602082015290516101399190610801565b60405180910390f35b610155610150366004610777565b61021b565b005b610155610165366004610645565b5050565b60405160008152602001610139565b6101556101863660046106b5565b6103b0565b61019460025481565b604051908152602001610139565b6101b56101b0366004610645565b610499565b60405161013991906107bb565b61019460015481565b6101de6101d9366004610645565b610578565b6040519015158152602001610139565b60016101de565b6101de610203366004610645565b6105d4565b6101de61021636600461075f565b610626565b600054610100900460ff1680610234575060005460ff16155b6102ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600054610100900460ff161580156102cd576000805461ffff19166101011790555b8183111561031d5760405162461bcd60e51b815260206004820152600b60248201527f7374617274203e20656e6400000000000000000000000000000000000000000060448201526064016102a2565b6001839055600282905560408051848152602081018490527f2aa006707091dbb6a3c123c2b234325bd71d72a53ba791b7227967655a550957910160405180910390a160408051848152602081018490527f89321eb999f10a080658dd5e8e1ad2ad210be9e3d965c97d0fff3380159664fd910160405180910390a180156103ab576000805461ff00191690555b505050565b600054610100900460ff16806103c9575060005460ff16155b61043b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016102a2565b600054610100900460ff1615801561045d576000805461ffff19166101011790555b600080838060200190518101906104749190610798565b91509150610482828261021b565b50508015610165576000805461ff00191690555050565b60608160008167ffffffffffffffff8111156104c557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104ee578160200160208202803683370190505b50905060005b8281101561056d5761052b86868381811061051f57634e487b7160e01b600052603260045260246000fd5b9050602002013561062d565b82828151811061054b57634e487b7160e01b600052603260045260246000fd5b911515602092830291909101909101528061056581610854565b9150506104f4565b509150505b92915050565b600081815b818110156105c9576105a885858381811061051f57634e487b7160e01b600052603260045260246000fd5b6105b757600092505050610572565b806105c181610854565b91505061057d565b506001949350505050565b600081815b818110156105c95761060485858381811061051f57634e487b7160e01b600052603260045260246000fd5b1561061457600092505050610572565b8061061e81610854565b9150506105d9565b6000610572825b60006001548210158015610572575050600254101590565b60008060208385031215610657578182fd5b823567ffffffffffffffff8082111561066e578384fd5b818501915085601f830112610681578384fd5b81358181111561068f578485fd5b8660208260051b85010111156106a3578485fd5b60209290920196919550909350505050565b6000602082840312156106c6578081fd5b813567ffffffffffffffff808211156106dd578283fd5b818401915084601f8301126106f0578283fd5b8135818111156107025761070261087b565b604051601f8201601f19908116603f0116810190838211818310171561072a5761072a61087b565b81604052828152876020848701011115610742578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215610770578081fd5b5035919050565b60008060408385031215610789578182fd5b50508035926020909101359150565b600080604083850312156107aa578182fd5b505080516020909101519092909150565b6020808252825182820181905260009190848201906040850190845b818110156107f55783511515835292840192918401916001016107d7565b50909695505050505050565b6000602080835283518082850152825b8181101561082d57858101830151858201604001528201610811565b8181111561083e5783604083870101525b50601f01601f1916929092016040019392505050565b600060001982141561087457634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fb2cf73ab3f0ae1e8111c26aedc88cf79ae788d940809f3ccca6a4c2f08a178664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17223,
        "contract": "contracts/solidity/eligibility/NFTXRangeEligibility.sol:NFTXRangeEligibility",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 17226,
        "contract": "contracts/solidity/eligibility/NFTXRangeEligibility.sol:NFTXRangeEligibility",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 14546,
        "contract": "contracts/solidity/eligibility/NFTXRangeEligibility.sol:NFTXRangeEligibility",
        "label": "rangeStart",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 14548,
        "contract": "contracts/solidity/eligibility/NFTXRangeEligibility.sol:NFTXRangeEligibility",
        "label": "rangeEnd",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}